/*@Generated by SharpKit v4.23.8000*/
if(typeof(Physics) == "undefined")
    Physics = {};
Physics.Vector = function(x,y)
{
    this._x = x;
    this._y = y;
}
Physics.Vector.prototype._x = 0;
Physics.Vector.prototype._y = 0;
Physics.Vector.prototype.Clone = function()
{
    return new Physics.Vector(this.get_X(),this.get_Y());
}
Physics.Vector.prototype.get_Y = function()
{
    return this._y;
}
Physics.Vector.prototype.set_Y = function(value)
{
    this._y = value;
}
Physics.Vector.prototype.get_X = function()
{
    return this._x;
}
Physics.Vector.prototype.set_X = function(value)
{
    this._x = value;
}
Physics.Vector.Length = function(a)
{
    return System.Math.Sqrt(System.Math.Pow(a.get_X(),2) + System.Math.Pow(a.get_Y(),2));
}
Physics.Vector.Normalize = function(a)
{
    var invLength=1 / Physics.Vector.Length(a);
    a.set_X(a.get_X() * invLength);
    a.set_Y(a.get_Y() * invLength);
}
Physics.Vector.MultiplyLength = function(a,multiple)
{
    a.set_X(a.get_X() * multiple);
    a.set_Y(a.get_Y() * multiple);
}
